<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | i => { :code4fun }]]></title>
  <link href="http://krolltech.github.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://krolltech.github.com/"/>
  <updated>2012-08-25T15:17:58+08:00</updated>
  <id>http://krolltech.github.com/</id>
  <author>
    <name><![CDATA[zhuoyikang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ruby正则表达式]]></title>
    <link href="http://krolltech.github.com/blog/2012/08/25/blogtest/"/>
    <updated>2012-08-25T09:17:00+08:00</updated>
    <id>http://krolltech.github.com/blog/2012/08/25/blogtest</id>
    <content type="html"><![CDATA[<h3>1.定义方法</h3>


<p>在ruby中可以使用以下反斜线//和%r() ,%r||定义正则表达式:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/Ruby/</span> <span class="c1">#匹配单词Ruby</span>
</span><span class='line'><span class="sr">/[Rr]uby/</span> <span class="c1">#匹配单词 Ruby 或 ruby</span>
</span><span class='line'><span class="sr">/&lt;sup&gt;abc/</span><span class="o">&lt;</span><span class="sr">/sup&gt; #匹配行首的abc</span>
</span><span class='line'><span class="sr">%r(xyz$) #匹配行尾的xyz</span>
</span><span class='line'><span class="sr">%r|[0-9]*| #匹配数字由0-9数字组成序列，0次或多次.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>2.修饰符</h3>


<p>可以在正则表达式后提供一些修饰符，以达到特殊的匹配意义：</p>

<table style="width:100%;">
<tr><td style="width:10%;"> 符号</td> <td style="text-align:left;"> 意义</td></tr>
<tr><td><b>i</b></td><td style="text-align:left;">如果在修饰符中加上"i"，则正则将会取消大小写敏感性，即"a"和"A" 是一样的。</td></tr>
<tr><td><b>o</b></td><td style="text-align:left;"></td> </tr>
<tr><td><b>m</b></td><td style="text-align:left;">默认的"."代表除了换行符以外的任何字符将会变成任意字符，也就是包括换行符！</td</tr>
<tr><td><b>x</b></td><td style="text-align:left;">扩展正则表达式，允许空白，注释等</td</tr>
</table>


<p>演示一下修饰符的作用:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;i修饰&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="sr">/good/i</span> <span class="o">=~</span> <span class="s1">&#39;GOOD&#39;</span>  <span class="c1">#=&gt; 0   匹配成功</span>
</span><span class='line'><span class="sr">/good/</span> <span class="o">=~</span> <span class="s1">&#39;GOOD&#39;</span> <span class="c1">#=&gt; nil 匹配失败&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">m</span><span class="err">修饰</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;/</span><span class="n">go</span><span class="o">.</span><span class="n">&lt;em</span><span class="o">&gt;</span><span class="n">od</span><span class="o">/.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;good</span><span class="se">\n</span><span class="s2">good&quot;</span><span class="p">)</span> <span class="o">=&gt;</span>  <span class="c1">#&lt;MatchData &quot;good&quot;&gt;</span>
</span><span class='line'><span class="sr">/go.&lt;/em</span><span class="o">&gt;</span><span class="n">od</span><span class="o">/</span><span class="n">m</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;good</span><span class="se">\n</span><span class="s2">good&quot;</span><span class="p">)</span> <span class="o">=&gt;</span>  <span class="c1">#&lt;MatchData &quot;good\ngood&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">x</span><span class="err">修饰</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&quot;good&quot;.gsub!(/o</span> <span class="n">o</span><span class="o">/</span> <span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="s2">&quot;good&quot;</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/o o/x</span> <span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="s2">&quot;gid&quot;</span>  <span class="c1">#忽略空白</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>3.匹配代号</h3>


<p>以下是一些简单的字符匹配，相信学习过正则的人都清楚：</p>

<table style="width:100%;">
<tr><td style="width:10%;"> 符号</td> <td style="text-align:left;"> 意义</td></tr>
<tr><td><b>^</b></td><td style="text-align:left;">一行或者是字符串的开头</td></tr>
<tr><td><b>$</b></td><td style="text-align:left;">一行或者是字符串的末尾</td></tr>
<tr><td><b>.</b></td><td style="text-align:left;">除换行符外的所有字符</td></tr>
<tr><td><b>/w</b></td><td style="text-align:left;">字母，数字，下划线</td> </tr>
<tr><td><b>/W</b></td><td style="text-align:left;">除字母，数字，下划线以外的字符</td> </tr>
<tr><td><b>/s</b></td><td style="text-align:left;">空格，\t换行符号</td</tr>
<tr><td><b>/S</b></td><td style="text-align:left;">除了空格，\t换行符号以外的字符</td></tr>
<tr><td><b>/d</b></td><td style="text-align:left;">数字字符</td></tr>
<tr><td><b>/D</b></td><td style="text-align:left;">非数字字符</td> </tr>
<tr><td><b>/b</b></td><td style="text-align:left;">单词边界</td></tr>
<tr><td><b>/B</b></td><td style="text-align:left;">非单词边界</td> </tr>
</table>




<h3>4.量词符号</h3>


<p>以下符号用来提供可选，重复次数等含义:</p>

<table style="width:100%;">
<tr><td style="width:10%;"> 符号</td> <td style="text-align:left;"> 意义</td></tr>
<tr><td><b>*</b></td><td style="text-align:left;">匹配0次或多次</td></tr>
<tr><td><b>+</b></td><td style="text-align:left;">匹配1次或多次</td></tr>
<tr><td><b>?</b></td><td style="text-align:left;">匹配0次或1次</td></tr>
<tr><td><b>{m,n}</b></td><td style="text-align:left;">匹配m到n次</td> </tr>
</table>




<h3>5.贪婪与非贪婪匹配</h3>


<p>默认情况下量词符号修饰的正则符号是贪婪匹配，简单来讲，贪婪匹配将尽可能多的匹配它修饰的正则符号，而非贪婪匹配将尽可能少的匹配它修饰的正则符号:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;量词+ 进行贪婪匹配，匹配一个或多个数字字符，这里它匹配了全部&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="sr">/\d+/</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;2323&quot;</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="c1">#&lt;MatchData &quot;2323&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">量词</span><span class="o">+</span> <span class="err">进行非贪婪匹配，匹配一个或多个数字字符，这里它匹配了一个字符</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;/</span><span class="p">\</span><span class="n">d</span><span class="o">+</span><span class="sc">?/</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;2323&quot;</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="c1">#&lt;MatchData &quot;2&quot;&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这就是贪婪匹配与非贪婪匹配的区别， 不需要再多描述!</p>

<p>ruby语言中在以下量词之后加?表示进行非贪婪匹配:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">*</span> <span class="o">=&gt;</span> <span class="o">*</span><span class="p">?</span>
</span><span class='line'><span class="o">+</span> <span class="o">=&gt;</span> <span class="o">+</span><span class="p">?</span>
</span><span class='line'><span class="p">{</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">}</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">}?</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>6.正向预查和反向预查</h3>


<p>正向预查匹配一个位置，但是不消耗其指定的匹配串.
reg = /New World(?= Dictionary| Symphony)/ 表示匹配出在Dictionary 或 Symphony 之前的 New World，但是这次匹配并不消耗Dictionary 或Symphony 。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s1</span> <span class="o">=</span> <span class="s2">&quot;New World Dictionary&quot;</span>
</span><span class='line'><span class="n">s2</span> <span class="o">=</span> <span class="s2">&quot;New World Symphony&quot;</span>
</span><span class='line'><span class="n">s3</span> <span class="o">=</span> <span class="s2">&quot;New World Order&quot;</span>
</span><span class='line'><span class="n">reg</span> <span class="o">=</span> <span class="sr">/New World(?= Dictionary| Symphony)/</span>
</span><span class='line'><span class="n">reg</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">s1</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="c1">#&lt;MatchData &quot;New World &quot;&gt;</span>
</span><span class='line'><span class="n">reg</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">s2</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="c1">#&lt;MatchData &quot;New World&quot;&gt;</span>
</span><span class='line'><span class="n">reg</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">s3</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="c1">#nil</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>反向预查则刚好相反，看看代码你就知道了:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s1</span> <span class="o">=</span> <span class="s2">&quot;New World Dictionary&quot;</span>
</span><span class='line'><span class="n">s2</span> <span class="o">=</span> <span class="s2">&quot;New World Symphony&quot;</span>
</span><span class='line'><span class="n">s3</span> <span class="o">=</span> <span class="s2">&quot;New World Order&quot;</span>
</span><span class='line'><span class="n">reg</span> <span class="o">=</span> <span class="sr">/New World(?! Dictionary| Symphony)/</span>
</span><span class='line'><span class="n">reg</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">s1</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">reg</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">s2</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="n">reg</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">s3</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="c1">#&lt;MatchData &quot;New World&quot;&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>7.特殊符号</h3>


<p>以下模式被赋予了特殊的含义:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/[[:alnum:]]/</span> <span class="c1"># 等价于 [0-9a-zA-z]</span>
</span><span class='line'><span class="sr">/[[:alpha:]]/</span> <span class="c1"># 等价于 [a-zA-Z]</span>
</span><span class='line'><span class="sr">/[[:blank:]]/</span> <span class="c1"># 空格或 tab</span>
</span><span class='line'><span class="sr">/[[:cntrl:]]/</span> <span class="c1"># ctrl</span>
</span><span class='line'><span class="sr">/[[:digit:]]/</span> <span class="c1"># [0-9]</span>
</span><span class='line'><span class="sr">/[[:graph:]]/</span> <span class="c1"># 非空白字符 (excludes spaces, control characters, and similar)</span>
</span><span class='line'><span class="sr">/[[:lower:]]/</span> <span class="c1"># 等价于 [a-z]</span>
</span><span class='line'><span class="sr">/[[:print:]]/</span> <span class="c1"># Like [:graph:], but includes the space character</span>
</span><span class='line'><span class="sr">/[[:punct:]]/</span> <span class="c1"># Punctuation character</span>
</span><span class='line'><span class="sr">/[[:space:]]/</span> <span class="c1"># 空白字符 ([:blank:], 换行,回车, 等.)</span>
</span><span class='line'><span class="sr">/[[:upper:]]/</span> <span class="c1"># 大写字符，[A-Z]</span>
</span><span class='line'><span class="sr">/[[:xdigit:]]/</span> <span class="c1"># 16进制数，等价于 [0-9a-fA-F] (i.e., 0-9a-fA-F)</span>
</span><span class='line'><span class="sr">/[[:word:]]/</span> <span class="c1"># A character in one of the following Unicode general&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>         <span class="c1"># categories Letter, Mark, Number, Connector_Punctuation</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="sr">/[[:ascii:]]/</span> <span class="c1"># A character in the ASCII</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (test.rb)</span> <a href='/downloads/code/test.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;test ruby&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Awesome code snippet</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
